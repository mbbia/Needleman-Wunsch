// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rcpp_compute_matrices
List rcpp_compute_matrices(IntegerMatrix Am, StringMatrix Dm, StringVector seq1, StringVector seq2, int gap, int miss, int match);
RcppExport SEXP _NeedlemanWunsch_rcpp_compute_matrices(SEXP AmSEXP, SEXP DmSEXP, SEXP seq1SEXP, SEXP seq2SEXP, SEXP gapSEXP, SEXP missSEXP, SEXP matchSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type Am(AmSEXP);
    Rcpp::traits::input_parameter< StringMatrix >::type Dm(DmSEXP);
    Rcpp::traits::input_parameter< StringVector >::type seq1(seq1SEXP);
    Rcpp::traits::input_parameter< StringVector >::type seq2(seq2SEXP);
    Rcpp::traits::input_parameter< int >::type gap(gapSEXP);
    Rcpp::traits::input_parameter< int >::type miss(missSEXP);
    Rcpp::traits::input_parameter< int >::type match(matchSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_compute_matrices(Am, Dm, seq1, seq2, gap, miss, match));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_NeedlemanWunsch_rcpp_compute_matrices", (DL_FUNC) &_NeedlemanWunsch_rcpp_compute_matrices, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_NeedlemanWunsch(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
